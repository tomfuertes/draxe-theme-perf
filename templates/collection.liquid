{% comment %}
Important notes about pagination:
- Never access collection.products before the opening paginate tag.
- Never paginate by more than 50.
{% endcomment %}

{% paginate collection.products by settings.collection_listing_count %}

{% comment %}
<style type="text/css">
.money {color: #B12704;}
.product_wrap .product-price .compare-at-price {font-size: 14px; color: black;}

.yotpo .text-m { font-size: 9px!important; }
.yotpo-stars {
  display: inline-block;
  margin: 0 auto;
}
.yotpo .text-m {
  font-size: 9px!important;
  display: block;
}
.standalone-bottomline.star-clickable, .yotpo .standalone-bottomline .star-clickable {
  cursor: pointer;
  width: 100%;
  text-align: center;
}
</style>
{% endcomment %}


<div class="collection-scope">

  {% comment %}
  Re-use the 'rte' class wherever you output content that was added by a merchant using
  the Rich Text Editor ( 'rte' stands for rich text editor ).
  Style all HTML elements in that content the same way across the board.
  Use the 'rte' class in your CSS to help maintain that consistency.
  Example: the h2 element should have the same size and color in:
  - product descriptions
  - collection descriptions
  - 'page' pages' content
  - blog post
  {% endcomment %}

  <!--<img src="{{ collection.image | collection_img_url: 'master' }}" class="collection-banner-img" alt="{{ collection.title }}" />-->


	  <h1 class="home-cat-title health"><span>{{ collection.title }}</span>

	  <!--ENABLE SORTING OF A COLLECTION-->
	  <div class="collection-sort">
	  <label for="sort-by">Sort by</label>
	  <select id="sort-by">
        <option value="manual">Featured</option>
		<option value="best-selling">Best Selling</option>
        <option value="price-ascending">Price: Low to High</option>
		<option value="title-ascending">A-Z</option>
	  </select>
	</div>
        </h1>
	<script>
	Shopify.queryParams = {};
	if (location.search.length) {
	  for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
		aKeyValue = aCouples[i].split('=');
		if (aKeyValue.length > 1) {
		  Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
		}
	  }
	}
	jQuery('#sort-by')
	  .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
	  .bind('change', function() {
		Shopify.queryParams.sort_by = jQuery(this).val();
		location.search = jQuery.param(Shopify.queryParams);
	  });
	</script>
	<!--END COLLECTION SORTING-->


  <div class="page_content">


    {% if collection.description.size > 0 %}
    <div class="rte">
      {{ collection.description }}
    </div>
    {% endif %}

    {% assign listing_cols = settings.collection_listing_cols %}
 	{% assign image_size = settings.homepage_listing_image_size %}


    <div class="product-listing product-listing__collection">
      <div class=" layout-grid layout-grid-col-five">
          {% for product in collection.products %}
          {% include 'product-grid-item' with 'listing_cols' with 'image_size' %}
        {% else %}
        <p>There are no products in this view.</p>
        {% endfor %}
      </div>
    </div>

    {% if paginate.pages > 1 %}
    <div id="pagination">
      {{ paginate | default_pagination }}
    </div>
    {% endif %}
  </div>
</div>

{% endpaginate %}
