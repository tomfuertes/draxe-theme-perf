!function(t,n){var i={controls:{enable:!1,toggleFilterButtons:!0,toggleLogic:"and",live:!0}},e={},o={},r=function(t,n){var i=[];return n.forEach(function(n,e){n.indexOf(t)>-1&&i.push(n.split(t,2)[1])}),i},a=function(t){return t=t.filter(function(t,n,i){return i.lastIndexOf(t)===n}),t.indexOf("")>-1&&t.splice(t.indexOf(""),1),t},l=function(t){return t.replace(/[\s\/]/g,"-").replace(/\&/g,"and").toLowerCase()},c=function(t){return t.replace(/\-/g," ").replace(/\w\S*/g,function(t){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()})},s=function(t,i,e){var o=n('[data-product-id="'+i.id+'"]');o.attr("data-index",t).attr("data-price",i.price).attr("data-title",i.title);for(var r in e)e[r].forEach(function(t){o.addClass(r+"-"+l(t))})},f=function(t,i,e){if(i.indexOf(null)>-1&&i.splice(i.indexOf(null),1),i.indexOf("Default Title")>-1&&i.splice(i.indexOf("Default Title"),1),0===i.length)return!1;var o=[];o.push(n("<div />",{"class":"filter__title",html:c(t)})),i.forEach(function(i,e){var r=n("<label />",{"class":"filter-option__value",html:c(i),"for":l(i)}),a=n("<input />",{type:"checkbox","class":"filter-option__checkbox",value:t,"data-filter":"."+t+"-"+l(i),id:l(i)}),s=n("<div />",{"class":"filter-option "+t+"-"+l(i),html:[a,r]});o.push(s)});var r=n("<div />",{"class":"filter","data-option":t,html:o});n(e).append(r)},u=function(){var t=[],i="";for(var e in o)o[e].length>0&&t.push(o[e]);allPossibleCases=function(t){if(0===t.length)return"";if(1===t.length)return t[0];var n=[],i=allPossibleCases(t.slice(1));for(var e in i)for(var o=0;o<t[0].length;o++)n.push(t[0][o]+i[e]);return n},0===t.length?i=".mix":(i=allPossibleCases(t),i=i.join(",")),n(".mix-container").mixItUp("filter",i)},d=function(t){var i=n(t).closest("[data-option]").attr("data-option"),e=n(t).attr("data-filter");n(t).attr("value");n(t).prop("checked")===!0?(n(t).parent().addClass("filter-option--selected"),o[i].push(e)):(n(t).parent().removeClass("filter-option--selected"),o[i].splice(o[i].indexOf(e),1)),u()},p=function(){n(".filter-option").removeClass("filter-option--selected"),n(".filter-option__checkbox:checked").prop("checked",!1);for(var t in o)o[t]=[];u()},v=function(t){n(t).hasClass("filter__title--opened")?(n(t).removeClass("filter__title--opened"),n(t).siblings(".filter-option").slideUp(300)):(n(t).addClass("filter__title--opened"),n(t).siblings(".filter-option").slideDown(300))},h=function(t){if(window.collectionItems){window.collectionItems.forEach(function(t,n){var i={};for(var o in e){var a=r(o+":",t.tags);i[o]=a,e[o]=e[o].concat(a)}s(n,t,i)});for(var n in e)f(n,a(e[n]),".collection-filters")}},m=function(){n(".mix-container").mixItUp(i)},g=function(){n(document).on("click",".filter__title",function(){v(this)}),n(document).on("click",".collection-filters__clear-all",p),n(document).on("change",".filter-option__checkbox",function(){d(this)})};t.init=function(){g(),m(),h()}}(window.Filtering=window.Filtering||{},jQuery,void 0),function(t,n,i){var e=n(".inline-cart"),o=n(".cart-contents-entry-point"),r=function(){n.get("/cart?view=contents",function(t){o.html(t)})},a=function(t){var i=n(t).attr("data-variant-id"),e=n(t).attr("data-variant-qty");CartJS.addItem(i,e,{},{success:function(t,n,i){},error:function(t,n,i){window.alert("Sorry, we're unable to do that.\n"+JSON.parse(t.responseText).description)}})},l=function(t){var i=n(t).attr("data-variant-id");CartJS.updateItemById(i,0)},c=function(){e.toggleClass("is-active")},s=function(){n(".add-to-cart").click(function(){a(this)}),n(document).on("click",".remove-item",function(){l(this)}),n(document).on("cart.requestComplete",function(t,n){r(),c()})};t.init=function(){s(),r()}}(window.InlineCart=window.InlineCart||{},jQuery),function(t,n){var i=function(){},e=function(){};t.init=function(){e(),i()}}(window.Sliders=window.Sliders||{},jQuery,void 0);
//# sourceMappingURL=data:application/json;base64,
